openapi: 3.0.3
info:
  title: SECOMP-API
  version: 0.5.0
  description: API de inscrições para a 5° edição da SECOMP
  contact:
    name: Pet Informática
    url: https://github.com/bfsgr/secomp-api
    email: pet@din.uem.br
servers:
  - url: http://localhost:3000
    description: Instância local
paths:
  /api/inscreve:
    post:
      tags:
        - Inscrição
      operationId: novaInscricao
      summary: Cria uma nova incrição na SECOMP
      description: Guarda os dados do inscrito no banco e o inscreve no feed da SECOMP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/inscricao"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/resultado"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/resultado"
  /api/desinscreve:
    delete:
      operationId: removeInscricao
      summary: Remove uma inscrição da SECOMP
      description: Remove os dados do inscrito no banco e o desinscreve do feed da SECOMP
      tags:
        - Inscrição
      parameters:
        - in: query
          name: id
          description: ID da inscrição
          required: true
          schema:
            type: number
            minimum: 1
        - in: query
          name: token
          schema:
            type: string
          description: Base64 string
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/resultado"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/resultado"
  /api/auth:
    post:
      operationId: masterAuth
      summary: Autenticação do PET-MASTER
      description: Retorna um JWT para ser usado nas operações de PET Master
      tags:
        - Organização
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: senha PET master
                  example: petmaster
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_token:
                    type: string
                    description: chave JWT
                    example: aaaa.bbbb.cccc
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/resultado"
  /api/list:
    get:
      operationId: masterList
      summary: Lista todos os inscritos
      description: Lista todos os inscritos com todoss os seus dados exceto unsubscribe_token
      tags:
        - Organização
      security:
        - petJWT: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inscritos"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/resultado"
  /api/inscrito/{id}:
    get:
      operationId: masterDetails
      summary: Lista os detalhes do inscrito id
      description: Lista os campos do modelo de inscrito com a chave primária ID
      tags:
        - Organização
      security:
        - petJWT: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID do inscrito
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inscritos"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/resultado"

components:
  securitySchemes:
    petJWT:
      type: http
      scheme: bearer
      bearerFormat: jwt

  schemas:
    resultado:
      type: object
      properties:
        status:
          type: number
          description: código HTML da operação
          example: 200
        erros:
          type: object
          properties:
            nome:
              type: array
              items:
                type: string
                description: Descrição de erro no campo de nome
                example: Nome não pode estar em branco
            email:
              type: array
              items:
                type: string
                description: Descrição de erro no campo de email
                example: Email inválido
            cpf:
              type: array
              items:
                type: string
                description: Descrição de erro no campo de CPF
                example: CPF inválido
            ra:
              type: array
              items:
                type: string
                description: Descrição de erro no campo de ra
                example: O RA deve ter 8 dígitos
            desinscrição:
              type: array
              items:
                type: string
                description: Descrição de erro no campo de token
                example: Token de desinscrição inválido
            auth_token:
              type: array
              items:
                type: string
                description: Erros no processamento de JWT
                example: Token de autorização inválido
      required:
        - status
    inscricao:
      type: object
      properties:
        nome:
          type: string
          description: Nome completo do inscrito
          example: João da Silva
        email:
          type: string
          description: Endereço de e-mail do inscrito
          example: example@example.com
        cpf:
          type: string
          description: Número de CPF do inscrito
          example: 739.366.869-63
        ra:
          type: string
          description: Número RA do inscrito, se for acadêmico da UEM
          example: "118899"
      required:
        - nome
        - email
        - cpf
    inscritos:
      type: array
      items:
        name: inscrito
        type: object
        properties:
          id:
            description: ID do inscrito
            example: 1
          nome:
            type: string
            description: Nome completo do inscrito
            example: João da Silva
          email:
            type: string
            description: Endereço de e-mail do inscrito
            example: example@example.com
          cpf:
            type: string
            description: Número de CPF do inscrito
            example: 739.366.869-63
          ra:
            type: string
            description: Número RA do inscrito, se for acadêmico da UEM
            example: "118899"
